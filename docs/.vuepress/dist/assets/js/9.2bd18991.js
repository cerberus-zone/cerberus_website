(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{406:function(e,a,t){"use strict";t.r(a);var s=t(56),r=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"running-a-cerberus-validator"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#running-a-cerberus-validator"}},[e._v("#")]),e._v(" "),t("strong",[e._v("Running a Cerberus validator")])]),e._v(" "),t("div",{staticStyle:{"text-align":"center"}},[t("img",{staticStyle:{width:"500px"},attrs:{src:e.$withBase("/website_logo.png"),alt:"Cerberus"}})]),e._v(" "),t("h2",{attrs:{id:"purpose"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#purpose"}},[e._v("#")]),e._v(" Purpose")]),e._v(" "),t("p",[e._v("This document will outline step by step how to set up and configure a Cerberus validator to run on a Linux-based OS.")]),e._v(" "),t("h2",{attrs:{id:"validator-installation-steps"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#validator-installation-steps"}},[e._v("#")]),e._v(" Validator Installation Steps")]),e._v(" "),t("h4",{attrs:{id:"_1-install-prerequisites"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-install-prerequisites"}},[e._v("#")]),e._v(" 1. Install Prerequisites")]),e._v(" "),t("p",[e._v("The following are necessary to build the cerberus binary from source. It will install all the needed dependencies to complete the installation of the Cerberus blockchain node software.")]),e._v(" "),t("div",{staticClass:"language-bash: extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# update the local package list and install any available upgrades\nsudo apt-get update && sudo apt upgrade -y\n# install toolchain and ensure accurate time synchronization\nsudo apt-get install make build-essential gcc git jq chrony -y\n")])])]),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[e._v("Note")]),e._v(" "),t("p",[e._v("If you are using a Red Hat distro of Linux you will have to run your commands using "),t("em",[e._v("yum")]),e._v(". See example below.")])]),e._v(" "),t("p",[e._v("Example using yum package manager. Going forward the remainder of the documentation all instructions will be using "),t("em",[e._v("apt-get")]),e._v(".")]),e._v(" "),t("div",{staticClass:"language-bash: extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# update the local package list and install any available upgrades\nsudo yum update && sudo apt upgrade -y\n# install toolchain and ensure accurate time synchronization\nsudo yum install make build-essential gcc git jq chrony -y\n")])])]),t("h4",{attrs:{id:"_2-installing-go-from-source"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-installing-go-from-source"}},[e._v("#")]),e._v(" 2. Installing Go from source")]),e._v(" "),t("div",{staticClass:"language-bash: extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("cd $HOME && sudo wget https://go.dev/dl/go1.17.6.linux-amd64.tar.gz\nsudo tar -C /usr/local -xzf go1.17.5.linux-amd64.tar.gz\nexport PATH=$PATH:/usr/local/go/bin\ngo version\n")])])]),t("p",[e._v("Output should be: go version go1.17.5 linux/amd64")]),e._v(" "),t("p",[e._v("Alternatively, you can follow the instructions "),t("a",{attrs:{href:"https://golang.org/doc/install",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),t("OutboundLink")],1),e._v(" to install Go.")]),e._v(" "),t("h3",{attrs:{id:"installing-cerberus-from-source"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#installing-cerberus-from-source"}},[e._v("#")]),e._v(" Installing Cerberus from source")]),e._v(" "),t("h4",{attrs:{id:"_1-clone-repository"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-clone-repository"}},[e._v("#")]),e._v(" 1. Clone repository")]),e._v(" "),t("p",[e._v("Note be sure you are in $HOME directory, if not run:")]),e._v(" "),t("div",{staticClass:"language-bash: extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("cd $HOME\n")])])]),t("p",[e._v("Next, run the commands below.")]),e._v(" "),t("div",{staticClass:"language-bash: extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("git clone https://github.com/cerberus-zone/cerberus.git\ncd cerberus\ngit checkout latest\nmake install && cd ~/go/bin && sudo cp cerberusd /usr/local/bin\n")])])]),t("h4",{attrs:{id:"_2-initiate-chain"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-initiate-chain"}},[e._v("#")]),e._v(" 2. Initiate Chain")]),e._v(" "),t("p",[e._v("This step will create all the needed configuration files needed to run your validator node. The "),t("em",[e._v("MONIKER_NAME")]),e._v(" name can be whatever you would like it to be.")]),e._v(" "),t("div",{staticClass:"language-bash: extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("export MONIKER_NAME=cerberus_validator\ncerberusd init $MONIKER_NAME --chain-id cerberus-1\n")])])]),t("p",[e._v("After running the commands above all node configuration files have been setup.")]),e._v(" "),t("h4",{attrs:{id:"_3-download-the-genesis-file"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-download-the-genesis-file"}},[e._v("#")]),e._v(" 3. Download the Genesis file")]),e._v(" "),t("p",[e._v("To download the genesis file you will want to run the commands below. The genesis file is required for your to join your validator node to the Cerberus blockchain.")]),e._v(" "),t("div",{staticClass:"language-bash: extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("cd $HOME/.cerberus/config/\nwget -O $HOME/.cerberus/config/genesis.json \\\nhttps://raw.githubusercontent.com/cerberus-zone/cerberus_genesis/main/genesis.json\n")])])]),t("h4",{attrs:{id:"_4-create-keys-cerberus-wallet-address"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-create-keys-cerberus-wallet-address"}},[e._v("#")]),e._v(" 4. Create keys/Cerberus wallet address")]),e._v(" "),t("p",[e._v("The key-name can be whatever you would like it to be. You probably want to name it based on what the wallet address will be used for.")]),e._v(" "),t("p",[e._v("Create key command")]),e._v(" "),t("div",{staticClass:"language-bash: extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# To create new keypair - make sure you save the mnemonics!\ncerberusd keys add <key-name>\n")])])]),t("p",[e._v("Create key command example")]),e._v(" "),t("div",{staticClass:"language-bash: extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# To create new keypair - make sure you save the mnemonics!\ncerberusd keys add personal_cerberus_wallet\n")])])]),t("p",[e._v("This will generated mnemonics like most blockchain wallets. You will want to store this is in a safe place. We recommend against storing your mnemonics backup in cloud storage. The mnemonics will not be displayed again on the screen once you close the terminal window.")]),e._v(" "),t("h3",{attrs:{id:"genesis-validator-additional-steps"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#genesis-validator-additional-steps"}},[e._v("#")]),e._v(" Genesis Validator additional steps")]),e._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[e._v("Note")]),e._v(" "),t("p",[e._v("If you are not running a Genesis Validator you can disregard the steps outlined below.")])])])}),[],!1,null,null,null);a.default=r.exports}}]);